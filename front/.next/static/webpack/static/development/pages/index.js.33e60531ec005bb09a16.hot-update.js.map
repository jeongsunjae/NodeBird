{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.33e60531ec005bb09a16.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState('');\r\n  const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\r\n  const imageInput = useRef();\r\n\r\n  useEffect(() => {\r\n    if (postAdded) {\r\n      setText('');\r\n    }\r\n  }, [postAdded]);\r\n\r\n  const onSubmitForm = useCallback((e) => {\r\n    \r\n    if (!text || !text.trim()) {\r\n      return alert('게시글을 작성하세요.');\r\n    }\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: {\r\n        content: text.trim(),\r\n      },\r\n    });\r\n  }, [text]);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n\r\n  const onChangeImages = useCallback((e)=> {\r\n    console.log(e.target.files);\r\n\r\n    const imageFormData = new FormData();\r\n\r\n    [].forEach.call(e.target.files, (f) => {\r\n\r\n      imageFormData.append('image', f);\r\n\r\n    });\r\n\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    })\r\n  },[])\r\n  const onClickImageUpload = useCallback(() => {\r\n    \r\n    imageInput.current.click();\r\n\r\n  },[imageInput.current]);\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmitForm}>\r\n      <Input.TextArea maxLength={140} placeholder=\"내용을 입력하세요\" value={text} onChange={onChangeText} />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>등록</Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: 'inline-block' }}>\r\n            <img src={`http://localhost:3000/${v}`} style={{ width: '200px' }} alt={v} />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AACA;AACA;;;;A","sourceRoot":""}