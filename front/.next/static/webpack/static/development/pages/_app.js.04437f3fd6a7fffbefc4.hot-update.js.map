{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.04437f3fd6a7fffbefc4.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  EDIT_NICKNAME_FAILURE, EDIT_NICKNAME_REQUEST,\r\n  EDIT_NICKNAME_SUCCESS,\r\n  FOLLOW_USER_FAILURE,\r\n  FOLLOW_USER_REQUEST,\r\n  FOLLOW_USER_SUCCESS,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n  LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_USER_FAILURE,\r\n  UNFOLLOW_USER_REQUEST,\r\n  UNFOLLOW_USER_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(loginData) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/login', loginData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction signUpAPI(signUpData) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    // yield call(signUpAPI);\r\n    yield call(signUpAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction logOutAPI() {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post('/user/logout', {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // yield call(logOutAPI);\r\n    yield call(logOutAPI);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction loadUserAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    // yield call(loadUserAPI);\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n      me: !action.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction followAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.post(`/user/${userId}/follow`, {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // yield call(followAPI);\r\n    const result = yield call(followAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: FOLLOW_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: FOLLOW_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n}\r\n\r\nfunction unfollowAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.delete(`/user/${userId}/follow`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // yield call(unfollowAPI);\r\n    const result = yield call(unfollowAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: UNFOLLOW_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: UNFOLLOW_USER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\r\n}\r\n\r\nfunction loadFollowersAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(`/user/${userId}/followers`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    // yield call(loadFollowersAPI);\r\n    const result = yield call(loadFollowersAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n  yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction loadFollowingsAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.get(`/user/${userId}/followings`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    // yield call(loadFollowersAPI);\r\n    const result = yield call(loadFollowingsAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n  yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction removeFollowerAPI(userId) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.delete(`/user/${userId}/follower`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n  try {\r\n    // yield call(loadFollowersAPI);\r\n    const result = yield call(removeFollowerAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: REMOVE_FOLLOWER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n  yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction editNicknameAPI(nickname) {\r\n  // 서버에 요청을 보내는 부분\r\n  return axios.patch('/user/nickname', { nickname }, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* editNickname(action) {\r\n  try {\r\n    // yield call(loadFollowersAPI);\r\n    const result = yield call(editNicknameAPI, action.data);\r\n    yield put({ // put은 dispatch 동일\r\n      type: EDIT_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: EDIT_NICKNAME_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchEditNickname() {\r\n  yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchLoadUser),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLoadFollowers),\r\n    fork(watchLoadFollowings),\r\n    fork(watchRemoveFollower),\r\n    fork(watchEditNickname),\r\n  ]);\r\n}"],"mappings":"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","sourceRoot":""}