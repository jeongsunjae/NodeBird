{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport PostForm from '../container/PostForm';\nimport PostCard from '../container/PostCard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost;\n\n  var dispatch = useDispatch();\n  var countRef = useRef([]);\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        var lastId = mainPosts[mainPosts.length - 1].id;\n\n        if (!countRef.current.includes(lastId)) {\n          dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST,\n            lastId: lastId\n          });\n          countRef.current.push(lastId);\n        }\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, me && __jsx(PostForm, null), mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nHome.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          context.store.dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/pages/index.js"],"names":["React","useEffect","useCallback","useRef","PostForm","PostCard","useSelector","useDispatch","LOAD_MAIN_POSTS_REQUEST","Home","state","user","me","post","mainPosts","hasMorePost","dispatch","countRef","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","current","includes","type","push","addEventListener","removeEventListener","map","c","getInitialProps","context","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,qBACFH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADT;AAAA,MACTC,EADS,gBACTA,EADS;;AAAA,sBAEkBN,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAF7B;AAAA,MAETC,SAFS,iBAETA,SAFS;AAAA,MAEEC,WAFF,iBAEEA,WAFF;;AAGjB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,QAAQ,GAAGd,MAAM,CAAC,EAAD,CAAvB;AAEA,MAAMe,QAAQ,GAAGhB,WAAW,CAAE,YAAK;AAEjC,QAAIiB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAGT,WAAH,EAAiB;AACf,YAAMU,MAAM,GAAGX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAkB,CAAnB,CAAT,CAA+BC,EAA9C;;AAEA,YAAG,CAACV,QAAQ,CAACW,OAAT,CAAiBC,QAAjB,CAA0BJ,MAA1B,CAAJ,EAAsC;AAEpCT,UAAAA,QAAQ,CAAC;AACPc,YAAAA,IAAI,EAAEtB,uBADC;AAEPiB,YAAAA,MAAM,EAANA;AAFO,WAAD,CAAR;AAIAR,UAAAA,QAAQ,CAACW,OAAT,CAAiBG,IAAjB,CAAsBN,MAAtB;AAED;AACF;AACF;AAEF,GAlB2B,EAkB1B,CAACV,WAAD,EAAaD,SAAS,CAACY,MAAvB,CAlB0B,CAA5B;AAoBDzB,EAAAA,SAAS,CAAC,YAAI;AAEZkB,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAiCd,QAAjC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACD,KAFD;AAID,GAPQ,EAOP,CAACJ,SAAS,CAACY,MAAX,CAPO,CAAT;AASC,SACE,mBACGd,EAAE,IAAI,MAAC,QAAD,OADT,EAEGE,SAAS,CAACoB,GAAV,CAAc,UAACC,CAAD,EAAO;AACpB,WACE,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACR,EAAjB;AAAqB,MAAA,IAAI,EAAEQ;AAA3B,MADF;AAGD,GAJA,CAFH,CADF;AAUD,CA7CD;;AA+CA1B,IAAI,CAAC2B,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AACrBA,UAAAA,OAAO,CAACC,KAAR,CAActB,QAAd,CAAuB;AACrBc,YAAAA,IAAI,EAAEtB;AADe,WAAvB;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAMA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\r\nimport PostForm from '../container/PostForm';\r\nimport PostCard from '../container/PostCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n  const { me } = useSelector(state => state.user);\r\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n  const dispatch = useDispatch();\r\n  const countRef = useRef([]);\r\n\r\n  const onScroll = useCallback (() =>{\r\n\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if(hasMorePost ) { \r\n        const lastId = mainPosts[mainPosts.length -1].id;\r\n\r\n        if(!countRef.current.includes(lastId)){\r\n          \r\n          dispatch({\r\n            type: LOAD_MAIN_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n          countRef.current.push(lastId);\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n  },[hasMorePost,mainPosts.length]);\r\n\r\n useEffect(()=>{\r\n\r\n   window.addEventListener('scroll',onScroll);\r\n   return () => {\r\n     window.removeEventListener('scroll', onScroll);\r\n   };\r\n\r\n },[mainPosts.length]);\r\n\r\n  return (\r\n    <div>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((c) => {\r\n        return (\r\n          <PostCard key={c.id} post={c} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.getInitialProps = async(context) => {\r\n  context.store.dispatch({\r\n    type: LOAD_MAIN_POSTS_REQUEST,\r\n  });\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}