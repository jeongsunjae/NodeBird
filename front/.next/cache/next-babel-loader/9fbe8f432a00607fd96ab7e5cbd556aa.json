{"ast":null,"code":"import { all, fork, delay, put, takeEvery, call } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction loginAPI() {\n  // 서버에 요청\n  return axios.post('/login');\n}\n\nfunction* login() {\n  try {\n    //yield call(loginAPI);\n    yield delay(2000), yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청\n  return axios.post('http://localhost:3065/api/user/', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield call(signAPI);\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignup() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignup)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/user.js"],"names":["all","fork","delay","put","takeEvery","call","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_FAILURE","axios","loginAPI","post","login","type","e","console","error","watchLogin","signUpAPI","signUpData","signUp","action","data","SIGN_UP_SUCCESS","watchSignup","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAkBC,KAAlB,EAAwBC,GAAxB,EAA4BC,SAA5B,EAAsCC,IAAtC,QAAiD,oBAAjD;AACA,SAASC,cAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,QAAgG,kBAAhG;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,QAAT,GAAoB;AACpB;AACI,SAAOD,KAAK,CAACE,IAAN,CAAW,QAAX,CAAP;AACH;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAI;AACA;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX,EACA,MAAMC,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACR;AADC,KAAD,CADT;AAIH,GAND,CAOA,OAAOS,CAAP,EACA;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUW,UAAV,GAAuB;AAEnB,QAAMf,SAAS,CAACE,cAAD,EAAiBQ,KAAjB,CAAf;AAEH;;AAGD,SAASM,SAAT,CAAmBC,UAAnB,EAA+B;AAC3B;AACA,SAAOV,KAAK,CAACE,IAAN,CAAW,iCAAX,EAA6CQ,UAA7C,CAAP;AACF;;AAGF,UAAUC,MAAV,CAAiBC,MAAjB,EAAwB;AACpB,MAAI;AACA;AACA,UAAMlB,IAAI,CAACe,SAAD,EAAYG,MAAM,CAACC,IAAnB,CAAV;AAEA,UAAMrB,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACU;AADC,KAAD,CAAT;AAGH,GAPD,CAQA,OAAOT,CAAP,EACA;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACL,eADC;AAENQ,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,WAAV,GAAwB;AAEpB,QAAMtB,SAAS,CAACK,eAAD,EAAkBa,MAAlB,CAAf;AAEH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAM3B,GAAG,CAAC,CAENC,IAAI,CAACkB,UAAD,CAFE,EAGNlB,IAAI,CAACyB,WAAD,CAHE,CAAD,CAAT;AAMH","sourcesContent":["import {all, fork,delay,put,takeEvery,call} from \"redux-saga/effects\";\r\nimport { LOG_IN_REQUEST,LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction loginAPI() {\r\n// 서버에 요청\r\n    return axios.post('/login');\r\n}\r\n\r\nfunction* login(){\r\n    try {\r\n        //yield call(loginAPI);\r\n        yield delay(2000),\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n\r\n}\r\n\r\n\r\nfunction signUpAPI(signUpData) {\r\n    // 서버에 요청\r\n    return axios.post('http://localhost:3065/api/user/',signUpData)\r\n }\r\n    \r\n\r\nfunction* signUp(action){\r\n    try {\r\n        // yield call(signAPI);\r\n        yield call(signUpAPI, action.data);\r\n\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignup() {\r\n\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n\r\n        fork(watchLogin),\r\n        fork(watchSignup),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}