{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button, List, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StopOutlined } from '@ant-design/icons';\nimport NicknameEditForm from '../container/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, REMOVE_FOLLOWER_REQUEST, UNFOLLOW_USER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../container/PostCard';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    followingList,\n    followerList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(StopOutlined, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onUnfollow(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowers\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(StopOutlined, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onRemoveFollower(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  }))));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState();\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/pages/profile.js"],"names":["React","useCallback","Button","List","Card","useDispatch","useSelector","StopOutlined","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","REMOVE_FOLLOWER_REQUEST","UNFOLLOW_USER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispatch","followingList","followerList","hasMoreFollower","hasMoreFollowing","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState","me"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAqC,MAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,YADF,QAEO,mBAFP;AAGA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SACEC,sBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,qBAJF,QAKO,kBALP;AAMA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAGY,IAAAA,aAAH;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA,eAAhC;AAAiDC,IAAAA;AAAjD,MAAsEd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvF;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBjB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAjC;AAEA,QAAMC,UAAU,GAAGxB,WAAW,CAACyB,MAAM,IAAI,MAAM;AAC7CV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEf,qBADC;AAEPgB,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAID,GAL6B,EAK3B,EAL2B,CAA9B;AAOA,QAAMG,gBAAgB,GAAG5B,WAAW,CAACyB,MAAM,IAAI,MAAM;AACnDV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEhB,uBADC;AAEPiB,MAAAA,IAAI,EAAEF;AAFC,KAAD,CAAR;AAID,GALmC,EAKjC,EALiC,CAApC;AAOA,QAAMI,kBAAkB,GAAG7B,WAAW,CAAC,MAAI;AACzCe,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAACjB,uBADE;AAEPqB,MAAAA,MAAM,EAACd,aAAa,CAACe;AAFd,KAAD,CAAR;AAID,GALqC,EAKpC,CAACf,aAAa,CAACe,MAAf,CALoC,CAAtC;AAOA,QAAMC,iBAAiB,GAAGhC,WAAW,CAAC,MAAI;AACxCe,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAElB,sBADC;AAEPsB,MAAAA,MAAM,EAAEb,YAAY,CAACc;AAFd,KAAD,CAAR;AAID,GALoC,EAKnC,CAACd,YAAY,CAACc,MAAd,CALmC,CAArC;AAOA,SACE,mBACE,MAAC,gBAAD,OADF,EAEE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,EAAE,qDAJV;AAKE,IAAA,QAAQ,EAAEjB,gBAAgB,IAAI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAER;AAA3C,6BALhC;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAEb,aAPd;AAQE,IAAA,UAAU,EAAEsB,IAAI,IACd,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAlB,OACE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAC,MAAC,YAAD;AAAc,QAAA,GAAG,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,OAAO,EAAEf,UAAU,CAACc,IAAI,CAACE,EAAN;AAAxD,QAAD;AAAf,OACE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,WAAW,EAAEF,IAAI,CAACG;AAA7B,MADF,CADF;AATJ,IAFF,EAkBE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAER,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,EAAE,qDAJV;AAKE,IAAA,QAAQ,EAAElB,eAAe,IAAI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEmB,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAEL;AAA3C,6BAL/B;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAEf,YAPd;AAQE,IAAA,UAAU,EAAEqB,IAAI,IACd,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAlB,OACE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAC,MAAC,YAAD;AAAc,QAAA,GAAG,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,OAAO,EAAEX,gBAAgB,CAACU,IAAI,CAACE,EAAN;AAA9D,QAAD;AAAf,OACE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,WAAW,EAAEF,IAAI,CAACG;AAA7B,MADF,CADF;AATJ,IAlBF,EAkCE,mBACGnB,SAAS,CAACoB,GAAV,CAAcC,CAAC,IACd,MAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,IAAA,IAAI,EAAED;AAAnC,IADD,CADH,CAlCF,CADF;AA0CD,CA3ED;;AA6EA7B,OAAO,CAAC+B,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AAE3C,QAAM1B,KAAK,GAAG0B,OAAO,CAACC,KAAR,CAAcC,QAAd,EAAd;AAEAF,EAAAA,OAAO,CAACC,KAAR,CAAchC,QAAd,CAAuB;AACrBW,IAAAA,IAAI,EAAElB,sBADe;AAErBmB,IAAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAW4B,EAAX,IAAiB7B,KAAK,CAACC,IAAN,CAAW4B,EAAX,CAAcT;AAFhB,GAAvB;AAIAM,EAAAA,OAAO,CAACC,KAAR,CAAchC,QAAd,CAAuB;AACrBW,IAAAA,IAAI,EAAEjB,uBADe;AAErBkB,IAAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAW4B,EAAX,IAAiB7B,KAAK,CAACC,IAAN,CAAW4B,EAAX,CAAcT;AAFhB,GAAvB;AAIAM,EAAAA,OAAO,CAACC,KAAR,CAAchC,QAAd,CAAuB;AACrBW,IAAAA,IAAI,EAAEd,uBADe;AAErBe,IAAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAW4B,EAAX,IAAiB7B,KAAK,CAACC,IAAN,CAAW4B,EAAX,CAAcT;AAFhB,GAAvB;AAMD,CAlBD;;AAoBA,eAAe1B,OAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button, List, Card,  } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  StopOutlined\r\n} from '@ant-design/icons';\r\nimport NicknameEditForm from '../container/NicknameEditForm';\r\nimport {\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  REMOVE_FOLLOWER_REQUEST,\r\n  UNFOLLOW_USER_REQUEST,\r\n} from '../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../container/PostCard';\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const {  followingList, followerList, hasMoreFollower, hasMoreFollowing } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n\r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  const onRemoveFollower = useCallback(userId => () => {\r\n    dispatch({\r\n      type: REMOVE_FOLLOWER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  const loadMoreFollowings = useCallback(()=>{\r\n    dispatch({\r\n      type:LOAD_FOLLOWINGS_REQUEST,\r\n      offset:followingList.length,\r\n    });\r\n  },[followingList.length]);\r\n\r\n  const loadMoreFollowers = useCallback(()=>{\r\n    dispatch({\r\n      type: LOAD_FOLLOWERS_REQUEST,\r\n      offset: followerList.length,\r\n    });\r\n  },[followerList.length]);\r\n\r\n  return (\r\n    <div>\r\n      <NicknameEditForm />\r\n      <List\r\n        style={{ marginBottom: '20px' }}\r\n        grid={{ gutter: 4, xs: 2, md: 3 }}\r\n        size=\"small\"\r\n        header={<div>팔로잉 목록</div>}\r\n        loadMore={hasMoreFollowing && <Button style={{ width: '100%' }} onClick={loadMoreFollowings}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followingList}\r\n        renderItem={item => (\r\n          <List.Item style={{ marginTop: '20px' }}>\r\n            <Card actions={[<StopOutlined key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />]}>\r\n              <Card.Meta description={item.nickname} />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <List\r\n        style={{ marginBottom: '20px' }}\r\n        grid={{ gutter: 4, xs: 2, md: 3 }}\r\n        size=\"small\"\r\n        header={<div>팔로워 목록</div>}\r\n        loadMore={hasMoreFollower && <Button style={{ width: '100%' }} onClick={loadMoreFollowers}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followerList}\r\n        renderItem={item => (\r\n          <List.Item style={{ marginTop: '20px' }}>\r\n            <Card actions={[<StopOutlined key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\r\n              <Card.Meta description={item.nickname} />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <div>\r\n        {mainPosts.map(c => (\r\n          <PostCard key={+c.createdAt} post={c} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.getInitialProps = async (context) => {\r\n\r\n  const state = context.store.getState();\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWERS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWINGS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n\r\n\r\n};\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}