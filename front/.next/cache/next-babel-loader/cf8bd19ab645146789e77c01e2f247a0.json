{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  // 이름 변경 중\n  editNicknameErrorReason: '' // 이름 변경 실패 사유\n\n};\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport var LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport var LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport var LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport var LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport var LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport var FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport var FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport var FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport var UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport var UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport var UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport var EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport var EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport var EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          return _objectSpread({}, state, {\n            me: action.data\n          });\n        }\n\n        return _objectSpread({}, state, {\n          userInfo: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Followings))\n          })\n        });\n      }\n\n    case FOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: state.me.Followings.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followingList: state.followingList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case UNFOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_TO_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Posts))\n          })\n        });\n      }\n\n    case REMOVE_POST_OF_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: state.me.Posts.filter(function (v) {\n              return v.id !== action.data;\n            })\n          })\n        });\n      }\n\n    case LOAD_FOLLOWERS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          followerList: state.followerList.concat(action.data)\n        });\n      }\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followerList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWERS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          followingList: state.followingList.concat(action.data)\n        });\n      }\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followingList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followers: state.me.Followers.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followerList: state.followerList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case REMOVE_FOLLOWER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case EDIT_NICKNAME_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: true,\n          editNicknameErrorReason: ''\n        });\n      }\n\n    case EDIT_NICKNAME_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          me: _objectSpread({}, state.me, {\n            nickname: action.data\n          })\n        });\n      }\n\n    case EDIT_NICKNAME_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          editNicknameErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/reducers/user.js"],"names":["initialState","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","state","action","type","data","isLoading","error","Followings","id","filter","v","Posts","concat","Followers","nickname"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  isLoggingOut: false, // 로그아웃 시도중\r\n  isLoggingIn: false, // 로그인 시도중\r\n  logInErrorReason: '', // 로그인 실패 사유\r\n  isSignedUp: false, // 회원가입 성공\r\n  isSigningUp: false, // 회원가입 시도중\r\n  signUpErrorReason: '', // 회원가입 실패 사유\r\n  me: null, // 내 정보\r\n  followingList: [], // 팔로잉 리스트\r\n  followerList: [], // 팔로워 리스트\r\n  userInfo: null, // 남의 정보\r\n  isEditingNickname: false, // 이름 변경 중\r\n  editNicknameErrorReason: '', // 이름 변경 실패 사유\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\r\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\r\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        logInErrorReason: '',\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        me: action.data,\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case LOG_IN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        logInErrorReason: action.error,\r\n        me: null,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n      };\r\n    }\r\n    case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        me: null,\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        isSignedUp: false,\r\n        signUpErrorReason: '',\r\n      };\r\n    }\r\n    case SIGN_UP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isSignedUp: true,\r\n      };\r\n    }\r\n    case SIGN_UP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        signUpErrorReason: action.error,\r\n      };\r\n    }\r\n    case LOAD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_USER_SUCCESS: {\r\n      if (action.me) {\r\n        return {\r\n          ...state,\r\n          me: action.data,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        userInfo: action.data,\r\n      };\r\n    }\r\n    case LOAD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case FOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case FOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: [{ id: action.data }, ...state.me.Followings],\r\n        },\r\n      };\r\n    }\r\n    case FOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case UNFOLLOW_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case UNFOLLOW_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followings: state.me.Followings.filter(v => v.id !== action.data),\r\n        },\r\n        followingList: state.followingList.filter(v => v.id !== action.data),\r\n      };\r\n    }\r\n    case UNFOLLOW_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_POST_TO_ME: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],\r\n        },\r\n      };\r\n    }\r\n    case REMOVE_POST_OF_ME: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: state.me.Posts.filter(v => v.id !== action.data),\r\n        },\r\n      };\r\n    }\r\n    case LOAD_FOLLOWERS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        followerList: state.followerList.concat(action.data),\r\n      };\r\n    }\r\n    case LOAD_FOLLOWERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followerList: action.data,\r\n      };\r\n    }\r\n    case LOAD_FOLLOWERS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_FOLLOWINGS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        followingList: state.followingList.concat(action.data),\r\n      };\r\n    }\r\n    case LOAD_FOLLOWINGS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        followingList: action.data,\r\n      };\r\n    }\r\n    case LOAD_FOLLOWINGS_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case REMOVE_FOLLOWER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case REMOVE_FOLLOWER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Followers: state.me.Followers.filter(v => v.id !== action.data),\r\n        },\r\n        followerList: state.followerList.filter(v => v.id !== action.data),\r\n      };\r\n    }\r\n    case REMOVE_FOLLOWER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case EDIT_NICKNAME_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isEditingNickname: true,\r\n        editNicknameErrorReason: '',\r\n      };\r\n    }\r\n    case EDIT_NICKNAME_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isEditingNickname: false,\r\n        me: {\r\n          ...state.me,\r\n          nickname: action.data,\r\n        },\r\n      };\r\n    }\r\n    case EDIT_NICKNAME_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isEditingNickname: false,\r\n        editNicknameErrorReason: action.error,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}