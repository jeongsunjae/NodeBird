{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nconst Hashtag = ({\n  tag\n}) => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const onScroll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length, tag]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePost, tag]);\n  return __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps = async context => {\n  const tag = context.query.tag;\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag\n  });\n  return {\n    tag\n  };\n};\n\nexport default Hashtag;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/pages/hashtag.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","tag","dispatch","mainPosts","hasMorePost","state","post","onScroll","useCallback","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","createdAt","propTypes","string","isRequired","getInitialProps","context","query","store"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAE3B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA9C;AAEA,QAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,QAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAIV,WAAJ,EAAiB;AACfF,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAEjB,0BADC;AAEPkB,UAAAA,MAAM,EAAEb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,IAAmCd,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFpE;AAGPC,UAAAA,IAAI,EAAElB;AAHC,SAAD,CAAR;AAKD;AACF;AACF,GAV2B,EAUzB,CAACG,WAAD,EAAcD,SAAS,CAACc,MAAxB,EAAgChB,GAAhC,CAVyB,CAA5B;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCb,QAAlC;AACA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACJ,SAAS,CAACc,MAAX,EAAmBb,WAAnB,EAAgCH,GAAhC,CALM,CAAT;AAOA,SACE,mBACGE,SAAS,CAACmB,GAAV,CAAcC,CAAC,IACd,MAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,IAAA,IAAI,EAAED;AAAnC,IADD,CADH,CADF;AAOD,CAhCD;;AAkCAvB,OAAO,CAACyB,SAAR,GAAoB;AAClBxB,EAAAA,GAAG,EAAEN,SAAS,CAAC+B,MAAV,CAAiBC;AADJ,CAApB;;AAIA3B,OAAO,CAAC4B,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AAC3C,QAAM5B,GAAG,GAAG4B,OAAO,CAACC,KAAR,CAAc7B,GAA1B;AAEA4B,EAAAA,OAAO,CAACE,KAAR,CAAc7B,QAAd,CAAuB;AACrBa,IAAAA,IAAI,EAAEjB,0BADe;AAErBqB,IAAAA,IAAI,EAAElB;AAFe,GAAvB;AAIA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CARD;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Hashtag = ({ tag }) => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n\r\n  const onScroll = useCallback(() => {\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if (hasMorePost) {\r\n        dispatch({\r\n          type: LOAD_HASHTAG_POSTS_REQUEST,\r\n          lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n          data: tag,\r\n        });\r\n      }\r\n    }\r\n  }, [hasMorePost, mainPosts.length, tag]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePost, tag]);\r\n\r\n  return (\r\n    <div>\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHashtag.propTypes = {\r\n  tag: PropTypes.string.isRequired,\r\n};\r\n\r\nHashtag.getInitialProps = async (context) => {\r\n  const tag = context.query.tag;\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: tag,\r\n  });\r\n  return { tag };\r\n};\r\n\r\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}