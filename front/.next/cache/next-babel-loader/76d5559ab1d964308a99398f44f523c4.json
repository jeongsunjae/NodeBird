{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost() {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","call","axios","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","addPostAPI","postData","post","withCredentials","addPost","result","action","data","type","e","error","watchAddPost","addCommentAPI","addComment","postId","console","log","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EACoBC,gBADpB,EACsCC,gBADtC,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,mBAJF,QAKO,kBALP;;AAOA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOR,KAAK,CAACS,IAAN,CAAW,OAAX,EAAoBD,QAApB,EAA8B;AACnCE,IAAAA,eAAe,EAAE;AADkB,GAA9B,CAAP;AAGD;;AAED,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMb,IAAI,CAACQ,UAAD,EAAaM,MAAM,CAACC,IAApB,CAAzB;AACA,UAAMjB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACZ,gBADC;AAENW,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFP,KAAD,CAAT;AAID,GAND,CAME,OAAOE,CAAP,EAAU;AACV,UAAMnB,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEd,gBADE;AAERgB,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,YAAV,GAAyB;AACvB,QAAMtB,UAAU,CAACM,gBAAD,EAAmBS,OAAnB,CAAhB;AACD;;AAGD,SAASQ,aAAT,GAAyB,CAExB;;AAED,UAAUC,UAAV,CAAqBP,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAET,mBADE;AAERQ,MAAAA,IAAI,EAAE;AACJO,QAAAA,MAAM,EAAER,MAAM,CAACC,IAAP,CAAYO;AADhB;AAFE,KAAD,CAAT;AAMD,GARD,CAQE,OAAOL,CAAP,EAAU;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACA,UAAMnB,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEX,mBADE;AAERa,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,eAAV,GAA4B;AAC1B,QAAM5B,UAAU,CAACS,mBAAD,EAAsBe,UAAtB,CAAhB;AACD;;AAID,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAM/B,GAAG,CAAC,CACRC,IAAI,CAACuB,YAAD,CADI,EAERvB,IAAI,CAAC6B,eAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS, \r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(postData) {\r\n  return axios.post('/post', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPost() {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data)\r\n    yield put({\r\n        type:ADD_POST_SUCCESS,\r\n        data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\n\r\nfunction addCommentAPI() {\r\n\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        postId: action.data.postId,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}