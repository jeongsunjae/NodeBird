{"ast":null,"code":"import { all, fork } from \"redux-saga/effects\";\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE, takeLatest } from \"../reducers/user\";\n\nfunction loginAPI() {// 서버에 요청\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/user.js"],"names":["all","fork","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","takeLatest","loginAPI","login","call","put","type","e","console","error","watchLogin","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,QAAwB,oBAAxB;AACA,SAASC,MAAT,EAAgBC,cAAhB,EAAgCC,cAAhC,EAA+CC,UAA/C,QAAiE,kBAAjE;;AAEA,SAASC,QAAT,GAAoB,CACpB;AACC;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAI;AACA,UAAMC,IAAI,CAACF,QAAD,CAAV;AACA,UAAMG,GAAG,CAAC;AACNC,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH,GALD,CAMA,OAAOQ,CAAP,EACA;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAACN;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUU,UAAV,GAAuB;AAEnB,QAAMT,UAAU,CAACH,MAAD,EAASK,KAAT,CAAhB;AAEH;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CAENC,IAAI,CAACa,UAAD,CAFE,CAAD,CAAT;AAKH","sourcesContent":["import {all, fork} from \"redux-saga/effects\";\r\nimport { LOG_IN,LOG_IN_SUCCESS, LOG_IN_FAILURE,takeLatest } from \"../reducers/user\";\r\n\r\nfunction loginAPI() {\r\n// 서버에 요청\r\n}\r\n\r\nfunction* login(){\r\n    try {\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n\r\n    yield takeLatest(LOG_IN, login)\r\n\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n\r\n        fork(watchLogin),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}