{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, delay, put, takeEvery, call } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, FOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST } from '../reducers/user';\n\nfunction loginAPI(loginData) {\n  // 서버에 요청\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction followAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction unfollowAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut), fork(watchLoadUser), fork(watchSignup), fork(watchFollow), fork(watchUnfollow)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/user.js"],"names":["login","watchLogin","signUp","watchSignup","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","userSaga","all","fork","delay","put","takeEvery","call","axios","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","FOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","loginAPI","loginData","post","withCredentials","action","data","result","type","console","error","signUpAPI","signUpData","logOutAPI","loadUserAPI","userId","get","me","followAPI","unfollowAPI"],"mappings":"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","sourcesContent":["import {all, fork,delay,put,takeEvery,call} from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport {\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    FOLLOW_USER_REQUEST,\r\n    UNFOLLOW_USER_SUCCESS,\r\n    UNFOLLOW_USER_FAILURE,\r\n    FOLLOW_USER_SUCCESS,\r\n    FOLLOW_USER_FAILURE,\r\n    UNFOLLOW_USER_REQUEST,\r\n  } from '../reducers/user';\r\n\r\n\r\nfunction loginAPI(loginData) {\r\n// 서버에 요청\r\n    return axios.post('/user/login', loginData, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* login(action){\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n\r\n}\r\n\r\n\r\nfunction signUpAPI(signUpData) {\r\n    // 서버에 요청\r\n    return axios.post('/user/',signUpData)\r\n }\r\n    \r\n\r\nfunction* signUp(action){\r\n    try {\r\n        // yield call(signAPI);\r\n        yield call(signUpAPI, action.data);\r\n\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignup() {\r\n\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n\r\n}\r\n\r\nfunction logOutAPI() {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/user/logout', {}, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* logOut() {\r\n    try {\r\n      // yield call(logOutAPI);\r\n      yield call(logOutAPI);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOG_OUT_SUCCESS,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOG_OUT_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLogOut() {\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n  }\r\n  \r\n  function loadUserAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(userId ? `/user/${userId}`:'/user/', {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* loadUser(action) {\r\n    try {\r\n    \r\n      const result = yield call(loadUserAPI, action.data);\r\n      yield put({ \r\n        type: LOAD_USER_SUCCESS,\r\n        data: result.data,\r\n        me : !action.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLoadUser() {\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n  }\r\n  \r\n  function followAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post(`/user/${userId}/follow`, {}, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* follow(action) {\r\n    try {\r\n      // yield call(followAPI);\r\n      const result = yield call(followAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: FOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: FOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchFollow() {\r\n    yield takeEvery(FOLLOW_USER_REQUEST, follow);\r\n  }\r\n  \r\n  function unfollowAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* unfollow(action) {\r\n    try {\r\n      // yield call(unfollowAPI);\r\n      const result = yield call(unfollowAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: UNFOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: UNFOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchUnfollow() {\r\n    yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\r\n  }\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignup),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}