{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE } from \"../reducers/user\";\nimport axios from 'axios';\n\nfunction loginAPI() {\n  // 서버에 요청\n  return axios.post('/login');\n}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(2000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signAPI() {// 서버에 요청\n}\n\nfunction signUp() {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signAPI);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchSignup)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/user.js"],"names":["login","watchLogin","signUp","watchSignup","userSaga","all","fork","takeLatest","takeEvery","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_FAILURE","axios","loginAPI","post","delay","put","type","console","error","signAPI","call","SIGN_UP_SUCCESS"],"mappings":";;oDAUUA,K;qDAiBAC,U;qDAYAC,M;qDAgBAC,W;qDAMeC,Q;;AA7DzB,SAAQC,GAAR,EAAaC,IAAb,EAAkBC,UAAlB,EAA6BC,SAA7B,QAA6C,oBAA7C;AACA,SAASC,cAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,QAAgG,kBAAhG;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,QAAT,GAAoB;AACpB;AACI,SAAOD,KAAK,CAACE,IAAN,CAAW,QAAX,CAAP;AACH;;AAED,SAAUhB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQ,iBAAMiB,KAAK,CAAC,IAAD,CAAX;;AAHR;AAAA;AAIQ,iBAAMC,GAAG,CAAC;AACNC,YAAAA,IAAI,EAACT;AADC,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQU,UAAAA,OAAO,CAACC,KAAR;AAVR;AAWQ,iBAAMH,GAAG,CAAC;AACNC,YAAAA,IAAI,EAACR;AADC,WAAD,CAAT;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUV,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMO,SAAS,CAACC,cAAD,EAAiBT,KAAjB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAASsB,OAAT,GAAmB,CACf;AACF;;AAGF,SAAUpB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMqB,IAAI,CAACD,OAAD,CAAV;;AAFR;AAAA;AAGQ,iBAAMJ,GAAG,CAAC;AACNC,YAAAA,IAAI,EAACK;AADC,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQJ,UAAAA,OAAO,CAACC,KAAR;AATR;AAUQ,iBAAMH,GAAG,CAAC;AACNC,YAAAA,IAAI,EAACN;AADC,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUV,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMK,SAAS,CAACI,eAAD,EAAkBV,MAAlB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAENC,IAAI,CAACL,UAAD,CAFE,EAGNK,IAAI,CAACH,WAAD,CAHE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all, fork,takeLatest,takeEvery} from \"redux-saga/effects\";\r\nimport { LOG_IN_REQUEST,LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction loginAPI() {\r\n// 서버에 요청\r\n    return axios.post('/login');\r\n}\r\n\r\nfunction* login(){\r\n    try {\r\n        //yield call(loginAPI);\r\n        yield delay(2000),\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n\r\n}\r\n\r\n\r\nfunction signAPI() {\r\n    // 서버에 요청\r\n }\r\n    \r\n\r\nfunction* signUp(){\r\n    try {\r\n        yield call(signAPI);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignup() {\r\n\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n\r\n        fork(watchLogin),\r\n        fork(watchSignup),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}