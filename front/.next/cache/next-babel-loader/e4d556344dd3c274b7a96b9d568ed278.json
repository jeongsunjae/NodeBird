{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button, List, Card } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StopOutlined } from '@ant-design/icons';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, REMOVE_FOLLOWER_REQUEST, UNFOLLOW_USER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      followingList = _useSelector.followingList,\n      followerList = _useSelector.followerList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(StopOutlined, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onUnfollow(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(StopOutlined, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  })));\n};\n\nProfile.getInitialProps = function _callee(context) {\n  var state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          state = context.store.getState();\n          context.store.dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            data: state.user.me && state.user.me.id\n          });\n          context.store.dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            data: state.user.me && state.user.me.id\n          });\n          context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: state.user.me && state.user.me.id\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/pages/profile.js"],"names":["React","useCallback","Button","List","Card","useDispatch","useSelector","StopOutlined","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","REMOVE_FOLLOWER_REQUEST","UNFOLLOW_USER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispatch","state","user","followingList","followerList","post","mainPosts","onUnfollow","userId","type","data","onRemoveFollower","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState","me"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button, List, Card,  } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  StopOutlined\r\n} from '@ant-design/icons';\r\nimport NicknameEditForm from '../components/NicknameEditForm';\r\nimport {\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  REMOVE_FOLLOWER_REQUEST,\r\n  UNFOLLOW_USER_REQUEST,\r\n} from '../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const {  followingList, followerList } = useSelector(state => state.user);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n\r\n  const onUnfollow = useCallback(userId => () => {\r\n    dispatch({\r\n      type: UNFOLLOW_USER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  const onRemoveFollower = useCallback(userId => () => {\r\n    dispatch({\r\n      type: REMOVE_FOLLOWER_REQUEST,\r\n      data: userId,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NicknameEditForm />\r\n      <List\r\n        style={{ marginBottom: '20px' }}\r\n        grid={{ gutter: 4, xs: 2, md: 3 }}\r\n        size=\"small\"\r\n        header={<div>팔로잉 목록</div>}\r\n        loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followingList}\r\n        renderItem={item => (\r\n          <List.Item style={{ marginTop: '20px' }}>\r\n            <Card actions={[<StopOutlined key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />]}>\r\n              <Card.Meta description={item.nickname} />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <List\r\n        style={{ marginBottom: '20px' }}\r\n        grid={{ gutter: 4, xs: 2, md: 3 }}\r\n        size=\"small\"\r\n        header={<div>팔로워 목록</div>}\r\n        loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\r\n        bordered\r\n        dataSource={followerList}\r\n        renderItem={item => (\r\n          <List.Item style={{ marginTop: '20px' }}>\r\n            <Card actions={[<StopOutlined key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\r\n              <Card.Meta description={item.nickname} />\r\n            </Card>\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <div>\r\n        {mainPosts.map(c => (\r\n          <PostCard key={+c.createdAt} post={c} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.getInitialProps = async (context) => {\r\n\r\n  const state = context.store.getState();\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWERS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_FOLLOWINGS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: state.user.me && state.user.me.id,\r\n  });\r\n\r\n\r\n};\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}