{"ast":null,"code":"import { all, fork, delay, put, takeEvery, call } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS } from \"../reducers/user\";\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3065/api';\n\nfunction loginAPI(loginData) {\n  // 서버에 요청\n  return axios.post('/user/login', loginData);\n}\n\nfunction* login(action) {\n  try {\n    yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청\n  return axios.post('/user/', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield call(signAPI);\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignup() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignup)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/user.js"],"names":["all","fork","delay","put","takeEvery","call","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","axios","defaults","baseURL","loginAPI","loginData","post","login","action","data","type","e","console","error","watchLogin","signUpAPI","signUpData","signUp","watchSignup","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAkBC,KAAlB,EAAwBC,GAAxB,EAA4BC,SAA5B,EAAsCC,IAAtC,QAAiD,oBAAjD;AACA,SAASC,cAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,EAAyFC,eAAzF,QAAgH,kBAAhH;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;;AACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC7B;AACI,SAAOJ,KAAK,CAACK,IAAN,CAAW,aAAX,EAA0BD,SAA1B,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAI;AACA,UAAMd,IAAI,CAACU,QAAD,EAAWI,MAAM,CAACC,IAAlB,CAAV;AACA,UAAMjB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACd;AADC,KAAD,CAAT;AAGH,GALD,CAMA,OAAOe,CAAP,EACA;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACb;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUiB,UAAV,GAAuB;AAEnB,QAAMrB,SAAS,CAACE,cAAD,EAAiBY,KAAjB,CAAf;AAEH;;AAGD,SAASQ,SAAT,CAAmBC,UAAnB,EAA+B;AAC3B;AACA,SAAOf,KAAK,CAACK,IAAN,CAAW,QAAX,EAAoBU,UAApB,CAAP;AACF;;AAGF,UAAUC,MAAV,CAAiBT,MAAjB,EAAwB;AACpB,MAAI;AACA;AACA,UAAMd,IAAI,CAACqB,SAAD,EAAYP,MAAM,CAACC,IAAnB,CAAV;AAEA,UAAMjB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACV;AADC,KAAD,CAAT;AAGH,GAPD,CAQA,OAAOW,CAAP,EACA;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMnB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACX,eADC;AAENc,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUO,WAAV,GAAwB;AAEpB,QAAMzB,SAAS,CAACK,eAAD,EAAkBmB,MAAlB,CAAf;AAEH;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAM9B,GAAG,CAAC,CAENC,IAAI,CAACwB,UAAD,CAFE,EAGNxB,IAAI,CAAC4B,WAAD,CAHE,CAAD,CAAT;AAMH","sourcesContent":["import {all, fork,delay,put,takeEvery,call} from \"redux-saga/effects\";\r\nimport { LOG_IN_REQUEST,LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE,SIGN_UP_SUCCESS } from \"../reducers/user\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3065/api';\r\nfunction loginAPI(loginData) {\r\n// 서버에 요청\r\n    return axios.post('/user/login', loginData);\r\n}\r\n\r\nfunction* login(action){\r\n    try {\r\n        yield call(loginAPI, action.data);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n\r\n}\r\n\r\n\r\nfunction signUpAPI(signUpData) {\r\n    // 서버에 요청\r\n    return axios.post('/user/',signUpData)\r\n }\r\n    \r\n\r\nfunction* signUp(action){\r\n    try {\r\n        // yield call(signAPI);\r\n        yield call(signUpAPI, action.data);\r\n\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignup() {\r\n\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n\r\n        fork(watchLogin),\r\n        fork(watchSignup),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}