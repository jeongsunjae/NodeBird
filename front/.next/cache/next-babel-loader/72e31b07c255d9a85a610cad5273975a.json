{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from \"react-redux\";\nimport PropsTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, singlePost.content), __jsx(\"div\", null, singlePost.User.nickname), __jsx(\"div\", null, singlePost.Images[0] && __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(post.Images[0].src)\n  })));\n};\n\nPost.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          context.store.dispatch({\n            type: LOAD_POST_REQUEST,\n            data: context.query.id\n          });\n          return _context.abrupt(\"return\", {\n            id: parseInt(context.query.id, 10)\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nPost.propsTypes = {\n  id: PropsTypes.number.isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/pages/post.js"],"names":["useSelector","PropsTypes","LOAD_POST_REQUEST","Post","id","state","post","singlePost","content","User","nickname","Images","src","getInitialProps","context","store","dispatch","type","data","query","parseInt","propsTypes","number","isRequired"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAU;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAAA,qBACIJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAEA,KAAK,CAACC,IAAR;AAAA,GAAN,CADf;AAAA,MACXC,UADW,gBACXA,UADW;;AAEnB,SACI,4BACI,mBAAMA,UAAU,CAACC,OAAjB,CADJ,EAEI,mBAAMD,UAAU,CAACE,IAAX,CAAgBC,QAAtB,CAFJ,EAGI,mBACKH,UAAU,CAACI,MAAX,CAAkB,CAAlB,KAAwB;AAAK,IAAA,GAAG,kCAA2BL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeC,GAA1C;AAAR,IAD7B,CAHJ,CADJ;AASH,CAXD;;AAaAT,IAAI,CAACU,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AACnBA,UAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuB;AACnBC,YAAAA,IAAI,EAAEf,iBADa;AAEnBgB,YAAAA,IAAI,EAAEJ,OAAO,CAACK,KAAR,CAAcf;AAFD,WAAvB;AADmB,2CAMZ;AAAEA,YAAAA,EAAE,EAAGgB,QAAQ,CAACN,OAAO,CAACK,KAAR,CAAcf,EAAf,EAAmB,EAAnB;AAAf,WANY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASAD,IAAI,CAACkB,UAAL,GAAkB;AACdjB,EAAAA,EAAE,EAAEH,UAAU,CAACqB,MAAX,CAAkBC;AADR,CAAlB;AAIA,eAAepB,IAAf","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport PropsTypes from 'prop-types';\r\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\r\n\r\nconst Post = ({id}) => {\r\n    const { singlePost } = useSelector(state=>state.post);\r\n    return (\r\n        <>\r\n            <div>{singlePost.content}</div>\r\n            <div>{singlePost.User.nickname}</div>\r\n            <div>\r\n                {singlePost.Images[0] && <img src={`http://localhost:3065/${post.Images[0].src}`}/>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nPost.getInitialProps = async(context) => {\r\n    context.store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: context.query.id,\r\n    });\r\n\r\n    return { id : parseInt(context.query.id, 10)};\r\n};\r\n\r\nPost.propsTypes = {\r\n    id: PropsTypes.number.isRequired,\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}