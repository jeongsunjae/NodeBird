{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport { CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nconst Overlay = styled.div`\n  position: 'fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\nconst Header = styled.header`\nheight: 44px;\nbackground: white;\nposition: relative;\npadding: 0;\ntext-align: center;\n`;\nconst H1 = styled.h1`\n  margin: 0;\n  font-size: 17px;\n  color: #333;\n  line-height: 44px;\n`;\nconst SlickWrapper = styled.div`\n  height: calc(100% - 44px);\n  background: #090909;\n`;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  return __jsx(Overlay, null, __jsx(Header, null, __jsx(H1, null, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(CloseOutlined, {\n    type: \"close\",\n    onClick: onClose,\n    style: {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      padding: 15,\n      lineHeight: '14px',\n      cursor: 'pointer'\n    }\n  })), __jsx(SlickWrapper, null, __jsx(\"div\", null, __jsx(Slick, {\n    initialSlide: 0,\n    afterChange: slide => setCurrentSlide(slide),\n    infinite: false,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }, images.map(v => {\n    return __jsx(\"div\", {\n      style: {\n        padding: 32,\n        textAlign: 'center'\n      }\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/${v.src}`,\n      style: {\n        margin: '0 auto',\n        maxHeight: 750\n      }\n    }));\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 75,\n      height: 30,\n      lineHeight: '30px',\n      borderRadius: 15,\n      background: '#313131',\n      display: 'inline-block',\n      textAlign: 'center',\n      color: 'white',\n      fontSize: '15px'\n    }\n  }, currentSlide + 1, \" / \", images.length)))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/components/ImagesZoom.js"],"names":["React","useState","PropTypes","Slick","CloseOutlined","styled","Overlay","div","Header","header","H1","h1","SlickWrapper","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","position","right","top","padding","lineHeight","cursor","slide","map","v","textAlign","src","margin","maxHeight","width","height","borderRadius","background","display","color","fontSize","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slick from 'react-slick';\r\nimport {CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: 'fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\nheight: 44px;\r\nbackground: white;\r\nposition: relative;\r\npadding: 0;\r\ntext-align: center;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  margin: 0;\r\n  font-size: 17px;\r\n  color: #333;\r\n  line-height: 44px;\r\n`;\r\n\r\n const SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background: #090909;\r\n`;\r\n\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <H1>상세 이미지</H1>\r\n        <CloseOutlined  type=\"close\" onClick={onClose} style={{ position: 'absolute', right: 0, top: 0, padding: 15, lineHeight: '14px', cursor: 'pointer' }} />\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0}\r\n            afterChange={slide => setCurrentSlide(slide)}\r\n            infinite={false}\r\n            arrows\r\n            slidesToShow={1}\r\n            slidesToScroll={1}\r\n          >\r\n            {images.map((v) => {\r\n              return (\r\n                <div style={{ padding: 32, textAlign: 'center' }}>\r\n                  <img src={`http://localhost:3065/${v.src}`} style={{ margin: '0 auto', maxHeight: 750 }} />\r\n                </div>\r\n              );\r\n            })}\r\n          </Slick>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <div style={{ width: 75, height: 30, lineHeight: '30px', borderRadius: 15, background: '#313131', display: 'inline-block', textAlign: 'center', color: 'white', fontSize: '15px' }}>\r\n              {currentSlide + 1} / {images.length}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape({\r\n    src: PropTypes.string,\r\n  })).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}