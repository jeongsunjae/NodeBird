{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from \"react-redux\";\nimport PropsTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\nimport { Helmet } from 'react-helmet';\n\nconst Post = ({\n  id\n}) => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(React.Fragment, null, __jsx(Helmet, {\n    title: `${singlePost.User.nickname}님의 글`,\n    description: singlePost,\n    meta: [{\n      name: 'description',\n      content: singlePost.content\n    }, {\n      property: 'og:title',\n      content: `${singlePost}님의 게시글`\n    }, {\n      property: 'og:description',\n      content: singlePost.content\n    }, {\n      property: 'og:image',\n      content: singlePost.Images[0] && `http://localhost:3065/${singlePost.Images[0].src}`\n    }, {\n      property: 'og:url',\n      content: `http://localhost:3060/post/${id}`\n    }]\n  }), __jsx(\"div\", null, id), __jsx(\"div\", null, singlePost.content), __jsx(\"div\", null, singlePost.User.nickname), __jsx(\"div\", null, singlePost.Images[0] && __jsx(\"img\", {\n    src: `http://localhost:3065/${singlePost.Images[0].src}`\n  })));\n};\n\nPost.getInitialProps = async context => {\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.query.id\n  });\n  return {\n    id: parseInt(context.query.id, 10)\n  };\n};\n\nPost.propsTypes = {\n  id: PropsTypes.number.isRequired\n};\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}