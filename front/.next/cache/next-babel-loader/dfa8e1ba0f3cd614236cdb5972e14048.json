{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppLayout from '../components/AppLayout';\nimport withRedex from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport reducer from '../reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport { Container } from 'next/app';\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return __jsx(Container, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Helmet, {\n    title: \"NodeBird\",\n    htmlAttributes: {\n      lang: 'ko'\n    },\n    meta: [{\n      charset: 'UTF-8'\n    }, {\n      name: 'viewport',\n      content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover'\n    }, {\n      'http-equiv': 'X-UA-Compatible',\n      content: 'IE=edge'\n    }, {\n      name: 'description',\n      content: ' NodeBird SNS'\n    }, {\n      name: 'og:title',\n      content: 'NodeBird'\n    }, {\n      name: 'og:description',\n      content: 'NodeBird SNS'\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }],\n    link: [{\n      rel: 'shortcut icon',\n      href: '/favicon.ico'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\n    }]\n  }), __jsx(AppLayout, null, __jsx(Component, pageProps))));\n};\n\n//getInitialProps를 사용할 수 있게 하는 사전 작업\nNodeBird.getInitialProps = function _callee(context) {\n  var ctx, Component, pageProps, cookie, state;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = context.ctx, Component = context.Component;\n          pageProps = {};\n          cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n\n          if (ctx.isServer && cookie) {\n            axios.defaults.headers.Cookie = cookie;\n          }\n\n          state = ctx.store.getState();\n\n          if (!state.user.me) {\n            ctx.store.dispatch({\n              type: LOAD_USER_REQUEST\n            });\n          }\n\n          if (!Component.getInitialProps) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n        case 9:\n          _context.t0 = _context.sent;\n\n          if (_context.t0) {\n            _context.next = 12;\n            break;\n          }\n\n          _context.t0 = {};\n\n        case 12:\n          pageProps = _context.t0;\n\n        case 13:\n          return _context.abrupt(\"return\", {\n            pageProps: pageProps\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, function (store) {\n    return function (next) {\n      return function (action) {\n        console.log(action);\n        next(action);\n      };\n    };\n  }];\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer); //withReduxSaga할 때 필요\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}; //redux를 사용하기 위해 store를 사용해야하는데 그 store를 만들어주는 부분\n\n\nexport default withRedex(configureStore)(withReduxSaga(NodeBird));","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/pages/_app.js"],"names":["React","AppLayout","withRedex","withReduxSaga","reducer","Provider","createStore","compose","applyMiddleware","createSagaMiddleware","rootSaga","LOAD_USER_REQUEST","axios","Helmet","Container","NodeBird","Component","store","pageProps","lang","charset","name","content","property","rel","href","getInitialProps","context","ctx","cookie","isServer","req","headers","defaults","Cookie","state","getState","user","me","dispatch","type","configureStore","initialState","options","sagaMiddleware","middlewares","next","action","console","log","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PropTypes  from 'prop-types';\r\nimport withRedex from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport reducer from '../reducers';\r\nimport {Provider} from 'react-redux'\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport axios from 'axios';\r\nimport {Helmet} from 'react-helmet';\r\nimport {Container} from 'next/app';\r\n\r\n\r\nconst NodeBird = ({Component, store, pageProps}) => {\r\n\r\n    return (\r\n      <Container>\r\n        <Provider store={store}>\r\n          <Helmet\r\n          title=\"NodeBird\"\r\n          htmlAttributes={{ lang: 'ko' }}\r\n          meta={[{\r\n            charset: 'UTF-8',\r\n          }, {\r\n            name: 'viewport',\r\n            content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover',\r\n          }, {\r\n            'http-equiv': 'X-UA-Compatible', content: 'IE=edge',\r\n          }, {\r\n            name: 'description', content: ' NodeBird SNS',\r\n          }, {\r\n            name: 'og:title', content: 'NodeBird',\r\n          }, {\r\n            name: 'og:description', content: 'NodeBird SNS',\r\n          }, {\r\n            property: 'og:type', content: 'website',\r\n          }]}\r\n          link={[{\r\n            rel: 'shortcut icon', href: '/favicon.ico',\r\n          }, {\r\n            rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css',\r\n          }, {\r\n            rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css',\r\n          }, {\r\n            rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css',\r\n          }]}\r\n        />\r\n            <AppLayout>\r\n                <Component {...pageProps} />\r\n            </AppLayout>\r\n        </Provider>\r\n      </Container>\r\n    )\r\n};\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n    pageProps: PropTypes.object.isRequired,\r\n};\r\n\r\n//getInitialProps를 사용할 수 있게 하는 사전 작업\r\nNodeBird.getInitialProps = async (context) => {\r\n\r\n    const { ctx, Component } = context;\r\n   \r\n    let pageProps = {};\r\n\r\n    const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\r\n\r\n    if(ctx.isServer && cookie)\r\n    {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    \r\n    const state = ctx.store.getState();\r\n    if(!state.user.me){\r\n      ctx.store.dispatch({\r\n        type: LOAD_USER_REQUEST,\r\n      });\r\n    }\r\n\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx) || {};\r\n    }\r\n\r\n    //컴포넌트의 프롭스\r\n    return { pageProps };\r\n  };\r\n\r\nconst configureStore = (initialState, options)=>{\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, (store)=>(next)=>(action)=> {\r\n      console.log(action);\r\n      next(action);\r\n    }];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n        applyMiddleware(...middlewares),\r\n        !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n      );\r\n    const store = createStore(reducer,initialState,enhancer);\r\n    //withReduxSaga할 때 필요\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\n//redux를 사용하기 위해 store를 사용해야하는데 그 store를 만들어주는 부분\r\nexport default withRedex(configureStore)(withReduxSaga(NodeBird));"]},"metadata":{},"sourceType":"module"}