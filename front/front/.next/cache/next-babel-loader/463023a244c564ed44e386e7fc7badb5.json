{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","call","axios","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","postData","post","withCredentials","addPost","type","e","error","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EACoBC,gBADpB,EACsCC,gBADtC,QAEO,kBAFP;;AAIA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOL,KAAK,CAACM,IAAN,CAAW,OAAX,EAAoBD,QAApB,EAA8B;AACnCE,IAAAA,eAAe,EAAE;AADkB,GAA9B,CAAP;AAGD;;AAED,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACN;AADC,KAAD,CAAT;AAGD,GALD,CAKE,OAAOO,CAAP,EAAU;AACV,UAAMb,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAER,gBADE;AAERU,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,YAAV,GAAyB;AACvB,QAAMhB,UAAU,CAACM,gBAAD,EAAmBM,OAAnB,CAAhB;AACD;;AAGD,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CACRC,IAAI,CAACiB,YAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(postData) {\r\n  return axios.post('/post', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPost() {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n        type:ADD_POST_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}