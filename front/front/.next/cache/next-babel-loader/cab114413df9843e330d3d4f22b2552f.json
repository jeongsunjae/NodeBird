{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '정선재'\n    },\n    content: '첫 번째 게시글',\n    img: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n  }]\n};\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_DUMMY = 'ADD_DUMMY';\nconst addPost = {\n  type: ADD_POST\n};\nconst addDummy = {\n  type: ADD_DUMMY\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n    case ADD_DUMMY:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","ADD_POST","ADD_DUMMY","addPost","type","addDummy","reducer","state","action","data"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAE;AACvBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADE;AAKRC,IAAAA,OAAO,EAAE,UALD;AAMRC,IAAAA,GAAG,EAAE;AANG,GAAD;AADY,CAApB;AAWP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAGP,MAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAEH;AADM,CAAhB;AAIA,MAAMI,QAAQ,GAAG;AACbD,EAAAA,IAAI,EAACF;AADQ,CAAjB;;AAIA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAChB;AACI,UAAOA,MAAM,CAACJ,IAAd;AAEI,SAAKH,QAAL;AAEA,SAAKC,SAAL;AACI;AACI,iCACOK,KADP;AAEIZ,UAAAA,SAAS,EAAE,CAACa,MAAM,CAACC,IAAR,EAAa,GAAGF,KAAK,CAACZ,SAAtB;AAFf;AAIH;;AAEL;AAAS;AACL,iCACOY,KADP;AAGH;AAhBL;AAkBH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["export const initialState= {\r\n    mainPosts: [{\r\n        User: {\r\n          id: 1,\r\n          nickname: '정선재',\r\n        },\r\n        content: '첫 번째 게시글',\r\n        img: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n      }],\r\n};\r\n\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_DUMMY = 'ADD_DUMMY';\r\n\r\n\r\nconst addPost = {\r\n    type: ADD_POST,\r\n};\r\n\r\nconst addDummy = {\r\n    type:ADD_DUMMY,\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case ADD_POST:\r\n        \r\n        case ADD_DUMMY:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    mainPosts: [action.data,...state.mainPosts],\r\n                }\r\n            }\r\n\r\n        default :{\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}