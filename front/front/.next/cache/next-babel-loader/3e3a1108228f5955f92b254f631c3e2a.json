{"ast":null,"code":"import { all, fork, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE } from \"../reducers/user\";\n\nfunction loginAPI() {// 서버에 요청\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction signAPI() {// 서버에 요청\n}\n\nfunction* signUp() {\n  try {\n    yield call(signAPI);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchSignup() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignup)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/sagas/user.js"],"names":["all","fork","takeLatest","takeEvery","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_FAILURE","loginAPI","login","call","put","type","e","console","error","watchLogin","signAPI","signUp","SIGN_UP_SUCCESS","watchSignup","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAkBC,UAAlB,EAA6BC,SAA7B,QAA6C,oBAA7C;AACA,SAASC,cAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,QAAgG,kBAAhG;;AAEA,SAASC,QAAT,GAAoB,CACpB;AACC;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAI;AACA,UAAMC,IAAI,CAACF,QAAD,CAAV;AACA,UAAMG,GAAG,CAAC;AACNC,MAAAA,IAAI,EAACR;AADC,KAAD,CAAT;AAGH,GALD,CAMA,OAAOS,CAAP,EACA;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUW,UAAV,GAAuB;AAEnB,QAAMd,SAAS,CAACC,cAAD,EAAiBM,KAAjB,CAAf;AAEH;;AAGD,SAASQ,OAAT,GAAmB,CACf;AACF;;AAGF,UAAUC,MAAV,GAAkB;AACd,MAAI;AACA,UAAMR,IAAI,CAACO,OAAD,CAAV;AACA,UAAMN,GAAG,CAAC;AACNC,MAAAA,IAAI,EAACO;AADC,KAAD,CAAT;AAGH,GALD,CAMA,OAAON,CAAP,EACA;AACIC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMF,GAAG,CAAC;AACNC,MAAAA,IAAI,EAACL;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUa,WAAV,GAAwB;AAEpB,QAAMlB,SAAS,CAACI,eAAD,EAAkBY,MAAlB,CAAf;AAEH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMtB,GAAG,CAAC,CAENC,IAAI,CAACgB,UAAD,CAFE,EAGNhB,IAAI,CAACoB,WAAD,CAHE,CAAD,CAAT;AAMH","sourcesContent":["import {all, fork,takeLatest,takeEvery} from \"redux-saga/effects\";\r\nimport { LOG_IN_REQUEST,LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_FAILURE } from \"../reducers/user\";\r\n\r\nfunction loginAPI() {\r\n// 서버에 요청\r\n}\r\n\r\nfunction* login(){\r\n    try {\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n\r\n    yield takeEvery(LOG_IN_REQUEST, login)\r\n\r\n}\r\n\r\n\r\nfunction signAPI() {\r\n    // 서버에 요청\r\n }\r\n    \r\n\r\nfunction* signUp(){\r\n    try {\r\n        yield call(signAPI);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS\r\n        })\r\n    }\r\n    catch (e)\r\n    {\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignup() {\r\n\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n\r\n        fork(watchLogin),\r\n        fork(watchSignup),\r\n\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}