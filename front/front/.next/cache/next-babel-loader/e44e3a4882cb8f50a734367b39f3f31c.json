{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: []\n};\nvar ADD_POST = 'ADD_POST';\nvar ADD_DUMMY = 'ADD_DUMMY';\nexport var addPost = {\n  type: ADD_POST\n};\nexport var addDummy = {\n  type: ADD_DUMMY\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n    case ADD_DUMMY:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/admin/Desktop/NodeBird/front/reducers/post.js"],"names":["initialState","mainPosts","ADD_POST","ADD_DUMMY","addPost","type","addDummy","reducer","state","action","data"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAE;AACvBC,EAAAA,SAAS,EAAE;AADY,CAApB;AAIP,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,SAAS,GAAG,WAAlB;AAGA,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,IAAI,EAAEH;AADa,CAAhB;AAIP,OAAO,IAAMI,QAAQ,GAAG;AACpBD,EAAAA,IAAI,EAACF;AADe,CAAjB;;AAIP,IAAMI,OAAO,GAAG,SAAVA,OAAU,GAChB;AAAA,MADiBC,KACjB,uEADyBR,YACzB;AAAA,MADuCS,MACvC;;AACI,UAAOA,MAAM,CAACJ,IAAd;AAEI,SAAKH,QAAL;AAEA,SAAKC,SAAL;AACI;AACI,iCACOK,KADP;AAEIP,UAAAA,SAAS,GAAGQ,MAAM,CAACC,IAAV,4BAAkBF,KAAK,CAACP,SAAxB;AAFb;AAIH;;AAEL;AAAS;AACL,iCACOO,KADP;AAGH;AAhBL;AAkBH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["export const initialState= {\r\n    mainPosts: [],\r\n};\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst ADD_DUMMY = 'ADD_DUMMY';\r\n\r\n\r\nexport const addPost = {\r\n    type: ADD_POST,\r\n};\r\n\r\nexport const addDummy = {\r\n    type:ADD_DUMMY,\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case ADD_POST:\r\n        \r\n        case ADD_DUMMY:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    mainPosts: [action.data,...state.mainPosts],\r\n                }\r\n            }\r\n\r\n        default :{\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}